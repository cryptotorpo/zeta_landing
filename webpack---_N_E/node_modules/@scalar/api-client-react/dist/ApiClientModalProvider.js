"use client";
import { jsxs as f, jsx as m } from "react/jsx-runtime";
import { createContext as S, useRef as x, useSyncExternalStore as A, useEffect as p, useContext as v } from "react";
import { clientStore as n } from "./client-store.js";
/* empty css          */
const d = S(null);
let u = !1;
const a = {}, j = ({
  children: C,
  initialRequest: r,
  configuration: l = {}
}) => {
  var i;
  const t = ((i = l.spec) == null ? void 0 : i.url) || "default", c = x(null), s = A(
    n.subscribe,
    n.getSnapshot,
    n.getSnapshot
  );
  return p(() => {
    u || (async () => {
      u = !0;
      const { createApiClientModalSync: o } = await import("@scalar/api-client/layouts/Modal");
      n.setCreateClient(o);
    })();
  }, []), p(() => {
    if (!c.current || !s.createClient || a[t]) return () => null;
    const e = s.createClient(c.current, l), o = async () => {
      await e.updateSpec(l.spec), r && e.route(r);
    };
    return n.addClient(t, e), a[t] = e, l.spec ? o() : r && e.route(r), () => {
      e.app.unmount(), n.removeClient(t), delete a[t];
    };
  }, [c.current, s.createClient]), /* @__PURE__ */ f(d.Provider, { value: s.clientDict[t], children: [
    /* @__PURE__ */ m(
      "div",
      {
        className: "scalar-app",
        ref: c
      }
    ),
    C
  ] });
}, w = () => v(d);
export {
  j as ApiClientModalProvider,
  w as useApiClientModal
};
